{"name":"expo-location","kind":0,"kindString":"Project","flags":{},"originalName":"","children":[{"name":"LocationAccuracy","kind":4,"kindString":"Enumeration","flags":{},"comment":{"shortText":"Enum with available location accuracies."},"children":[{"name":"Balanced","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"Accurate to within one hundred meters."},"defaultValue":"3"},{"name":"BestForNavigation","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"The highest possible accuracy that uses additional sensor data\nto facilitate navigation apps."},"defaultValue":"6"},{"name":"High","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"Accurate to within ten meters of the desired target."},"defaultValue":"4"},{"name":"Highest","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"The best level of accuracy available."},"defaultValue":"5"},{"name":"Low","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"Accurate to the nearest kilometer."},"defaultValue":"2"},{"name":"Lowest","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"Accurate to the nearest three kilometers."},"defaultValue":"1"}]},{"name":"LocationActivityType","kind":4,"kindString":"Enumeration","flags":{},"comment":{"shortText":"Enum with available activity types of background location tracking."},"children":[{"name":"Airborne","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"Intended for airborne activities.\nAvailable since iOS 12.0, fall backs to ActivityType.Other otherwise."},"defaultValue":"5"},{"name":"AutomotiveNavigation","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"Location updates are being used specifically during vehicular navigation\n to track location changes to the automobile."},"defaultValue":"2"},{"name":"Fitness","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"Use this activity type if you track fitness activities\nsuch as walking, running, cycling, and so on."},"defaultValue":"3"},{"name":"Other","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"Default activity type.\nUse it if there is no other type that matches the activity you track."},"defaultValue":"1"},{"name":"OtherNavigation","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"Activity type for movements for other types of vehicular navigation\nthat are not automobile related."},"defaultValue":"4"}]},{"name":"LocationGeofencingEventType","kind":4,"kindString":"Enumeration","flags":{},"comment":{"shortText":"A type of the event that geofencing task can receive."},"children":[{"name":"Enter","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"Emitted when the device entered observed region."},"defaultValue":"1"},{"name":"Exit","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"Occurs as soon as the device left observed region."},"defaultValue":"2"}]},{"name":"LocationGeofencingRegionState","kind":4,"kindString":"Enumeration","flags":{},"comment":{"shortText":"State of the geofencing region that you receive through the geofencing task."},"children":[{"name":"Inside","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"Indicates that the device is inside the region."},"defaultValue":"1"},{"name":"Outside","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"Inverse of inside state."},"defaultValue":"2"},{"name":"Unknown","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"The device state is unknown"},"defaultValue":"0"}]},{"name":"PermissionStatus","kind":4,"kindString":"Enumeration","flags":{"isExternal":true},"children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","flags":{"isExternal":true},"defaultValue":"\"denied\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","flags":{"isExternal":true},"defaultValue":"\"granted\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","flags":{"isExternal":true},"defaultValue":"\"undetermined\""}]},{"name":"LocationPermissionResponse","kind":256,"kindString":"Interface","flags":{},"comment":{"shortText":"`LocationPermissionResponse` extends `PermissionResponse` type exported\nby unimodules-permission-interface and contains additional platform-specific fields."},"children":[{"name":"android","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"PermissionDetailsLocationAndroid"}},{"name":"canAskAgain","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"UMPermissionResponse.canAskAgain"}},{"name":"expires","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"reference","name":"PermissionExpiration"},"inheritedFrom":{"type":"reference","name":"UMPermissionResponse.expires"}},{"name":"granted","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"UMPermissionResponse.granted"}},{"name":"ios","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"PermissionDetailsLocationIOS"}},{"name":"status","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"reference","name":"PermissionStatus"},"inheritedFrom":{"type":"reference","name":"UMPermissionResponse.status"}}],"extendedTypes":[{"type":"reference","name":"UMPermissionResponse"}]},{"name":"LocationCallback","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"shortText":"Represents `watchPositionAsync` callback."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"name":"location","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"LocationObject"}}],"type":{"type":"intrinsic","name":"any"}}]}}},{"name":"LocationCoords","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"shortText":"Represents `watchPositionAsync` callback."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"accuracy","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The radius of uncertainty for the location, measured in meters.\nCan be `null` on Web if it's not available."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}},{"name":"altitude","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The altitude in meters above the WGS 84 reference ellipsoid.\nCan be `null` on Web if it's not available."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}},{"name":"altitudeAccuracy","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The accuracy of the altitude value, in meters.\nCan be `null` on Web if it's not available."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}},{"name":"heading","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Horizontal direction of travel of this device, measured in degrees\nstarting at due north and continuing clockwise around the compass.\nThus, north is 0 degrees, east is 90 degrees, south is 180 degrees, and so on.\nCan be `null` on Web if it's not available."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}},{"name":"latitude","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The latitude in degrees."},"type":{"type":"intrinsic","name":"number"}},{"name":"longitude","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The longitude in degrees."},"type":{"type":"intrinsic","name":"number"}},{"name":"speed","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The instantaneous speed of the device in meters per second.\nCan be `null` on Web if it's not available."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}}]}}},{"name":"LocationGeocodedAddress","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"shortText":"Type representing a result of `reverseGeocodeAsync`."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"city","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"City name of the address."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"country","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Localized country name of the address."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"district","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Additional city-level information like district name."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"isoCountryCode","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Localized (iso) country code of the address, if available."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"name","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The name of the placemark, for example, \"Tower Bridge\"."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"postalCode","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":" Postal code of the address."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"region","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The state or province associated with the address."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"street","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Street name of the address."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"subregion","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Additional information about administrative area."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"timezone","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The timezone identifier associated with the address (**iOS only**)"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}}]}}},{"name":"LocationGeocodedLocation","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"shortText":"Type representing a result of `geocodeAsync`."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"accuracy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The radius of uncertainty for the location, measured in meters."},"type":{"type":"intrinsic","name":"number"}},{"name":"altitude","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The altitude in meters above the WGS 84 reference ellipsoid."},"type":{"type":"intrinsic","name":"number"}},{"name":"latitude","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The latitude in degrees."},"type":{"type":"intrinsic","name":"number"}},{"name":"longitude","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The longitude in degrees."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"LocationGeocodingOptions","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"shortText":"An object of options for forward and reverse geocoding."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"useGoogleMaps","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to force using Google Maps API instead of the native implementation.\nUsed by default only on Web platform. Requires providing an API key by `setGoogleApiKey`."},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"LocationHeadingCallback","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"shortText":"Represents `watchHeadingAsync` callback."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"name":"location","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"LocationHeadingObject"}}],"type":{"type":"intrinsic","name":"any"}}]}}},{"name":"LocationHeadingObject","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"shortText":"Type of the object containing heading details and provided by `watchHeadingAsync` callback."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"accuracy","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Level of calibration of compass.\n3: high accuracy, 2: medium accuracy, 1: low accuracy, 0: none\nReference for iOS:\n3: < 20 degrees uncertainty, 2: < 35 degrees, 1: < 50 degrees, 0: > 50 degrees"},"type":{"type":"intrinsic","name":"number"}},{"name":"magHeading","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Measure of magnetic north in degrees."},"type":{"type":"intrinsic","name":"number"}},{"name":"trueHeading","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Measure of true north in degrees (needs location permissions, will return -1 if not given)."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"LocationLastKnownOptions","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"shortText":"Type representing options object that can be passed to `getLastKnownPositionAsync`."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"maxAge","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Maximum age of the location in miliseconds."},"type":{"type":"intrinsic","name":"number"}},{"name":"requiredAccuracy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Maximum radius of horizontal accuracy in meters."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"LocationObject","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"shortText":"Type representing the location object."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"coords","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The coordinates of the position."},"type":{"type":"reference","name":"LocationCoords"}},{"name":"timestamp","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The time at which this position information was obtained,\nin milliseconds since epoch."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"LocationOptions","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"shortText":"Type representing options argument in `getCurrentPositionAsync`."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"accuracy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Location manager accuracy. Pass one of `LocationAccuracy` enum values.\nFor low-accuracies the implementation can avoid geolocation providers\nthat consume a significant amount of power (such as GPS)."},"type":{"type":"reference","name":"LocationAccuracy"}},{"name":"distanceInterval","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Receive updates only when the location has changed by at least this distance in meters.\nDefault value may depend on `accuracy` option."},"type":{"type":"intrinsic","name":"number"}},{"name":"mayShowUserSettingsDialog","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"(**Android only**) Specifies whether to ask the user to turn on improved accuracy location mode\nwhich uses Wi-Fi, cell networks and GPS sensor. Defaults to `true`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"timeInterval","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"(**Android only**) Minimum time to wait between each update in milliseconds.\nDefault value may depend on `accuracy` option."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"LocationProviderStatus","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"shortText":"Represents the object containing details about location provider."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"backgroundModeEnabled","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Whether background mode is enabled.\nSee Location.isBackgroundLocationAvailableAsync for a more convenient solution to get this value."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"gpsAvailable","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"(**Android only**) Whether the GPS provider is available.\nIf `true` the location data will come from GPS, especially for requests with high accuracy."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"locationServicesEnabled","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Whether location services are enabled.\nSee Location.hasServicesEnabledAsync for a more convenient solution to get this value."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"networkAvailable","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"(**Android only**) Whether the network provider is available.\nIf `true` the location data will come from cellular network, especially for requests\nwith low accuracy."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"passiveAvailable","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"(**Android only**) Whether the passive provider is available.\n If `true` the location data will be determined passively."},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"LocationRegion","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"shortText":"Type representing geofencing region object."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"identifier","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The identifier of the region object passed to `startGeofencingAsync` or auto-generated."},"type":{"type":"intrinsic","name":"string"}},{"name":"latitude","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The latitude in degress of region's center point."},"type":{"type":"intrinsic","name":"number"}},{"name":"longitude","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The longitude in degress of region's center point."},"type":{"type":"intrinsic","name":"number"}},{"name":"notifyOnEnter","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Boolean value whether to call the task if the device enters the region.\nDefaults to `true`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"notifyOnExit","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Boolean value whether to call the task if the device exits the region.\nDefaults to `true`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"radius","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The radius measured in meters that defines the region's outer boundary."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"LocationSubscription","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"shortText":"Represents subscription object returned by methods watching for new locations or headings."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"remove","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}}]}}},{"name":"LocationTaskOptions","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"shortText":"Type representing background location task options."},"type":{"type":"intersection","types":[{"type":"reference","name":"LocationOptions"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"activityType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The type of user activity associated with the location updates.\nSee [Apple docs](https://developer.apple.com/documentation/corelocation/cllocationmanager/1620567-activitytype)\nfor more details. Defaults to `LocationActivityType.Other`. (**iOS only**)"},"type":{"type":"reference","name":"LocationActivityType"}},{"name":"deferredUpdatesDistance","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The distance in meters that must occur between last reported location\nand the current location before deferred locations are reported. Defaults to `0`.\n> Deferred updates provide a way to report locations in a batch when the app is\nin the background state. Location updates aren't being deferred in the foreground."},"type":{"type":"intrinsic","name":"number"}},{"name":"deferredUpdatesInterval","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Minimum time interval in milliseconds that must pass since last reported location\nbefore all later locations are reported in a batched update. Defaults to `0`.\n> Deferred updates provide a way to report locations in a batch when the app is\nin the background state. Location updates aren't being deferred in the foreground."},"type":{"type":"intrinsic","name":"number"}},{"name":"foregroundService","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Use this option to put the location service into a foreground state, which will make\nlocation updates in the background as frequent as in the foreground state.\nAs a downside, it requires a sticky notification, so the user will be aware that your app\nis running and consumes more resources even if backgrounded. (**Available since Android 8.0**)"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"notificationBody","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Subtitle of the foreground service notification."},"type":{"type":"intrinsic","name":"string"}},{"name":"notificationColor","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Color of the foreground service notification.\nAccepts `#RRGGBB` and `#AARRGGBB` hex formats."},"type":{"type":"intrinsic","name":"string"}},{"name":"notificationTitle","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Title of the foreground service notification."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"pausesUpdatesAutomatically","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean value indicating whether the location manager can pause location updates\nto improve battery life without sacrificing location data. When this option is set to true,\nthe location manager pauses updates (and powers down the appropriate hardware) at times\nwhen the location data is unlikely to change.\nYou can help the determination of when to pause location updates by assigning a value\nto the activityType property. Defaults to `false`. (**iOS only**)"},"type":{"type":"intrinsic","name":"boolean"}},{"name":"showsBackgroundLocationIndicator","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean indicating whether the status bar changes its appearance when\nlocation services are used in the background. Defaults to `false`.\n(**Takes effect only on iOS 11.0 and later**)"},"type":{"type":"intrinsic","name":"boolean"}}]}}]}},{"name":"PermissionDetailsLocationAndroid","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"accuracy","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"On Android it indicates the type of location provider with\npossible values: fine, coarse, none."},"type":{"type":"union","types":[{"type":"literal","value":"fine"},{"type":"literal","value":"coarse"},{"type":"literal","value":"none"}]}},{"name":"scope","kind":1024,"kindString":"Property","flags":{},"comment":{"tags":[{"tag":"deprecated","text":"use `accuracy` instead\n"}]},"type":{"type":"union","types":[{"type":"literal","value":"fine"},{"type":"literal","value":"coarse"},{"type":"literal","value":"none"}]}}]}}},{"name":"PermissionDetailsLocationIOS","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"scope","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The scope of granted permission.\nIndicates when it's possible to use location, possible values are: whenInUse, always or none."},"type":{"type":"union","types":[{"type":"literal","value":"whenInUse"},{"type":"literal","value":"always"},{"type":"literal","value":"none"}]}}]}}},{"name":"EventEmitter","kind":32,"kindString":"Variable","flags":{"isConst":true},"type":{"type":"reference","name":"EventEmitter"},"defaultValue":"..."},{"name":"_getCurrentWatchId","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"_getCurrentWatchId","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Necessary for some unit tests.","returns":"The current subscription id\n"},"type":{"type":"intrinsic","name":"number"}}]},{"name":"enableNetworkProviderAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"enableNetworkProviderAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Asks the user to turn on high accuracy location mode which enables network provider\nthat uses Google Play services to improve location accuracy and location-based services.","returns":"A `Promise` resolving as soon as the user accepts the dialog. Rejects if denied.\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"geocodeAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"geocodeAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Geocode an address string to latitude-longitude location.","text":"> **Note**: Geocoding is resource consuming and has to be used reasonably.\nCreating too many requests at a time can result in an error so they have to be managed properly.\nIt's also discouraged to use geocoding while the app is in the background\nand its results won't be shown to the user immediately.\n> On Android, you must request a location permission\n(`Permissions.LOCATION`) from the user before geocoding can be used.\n","returns":"A `Promise` resolving to an array (in most cases its size is 1)\nof geocoded location objects of type\n[`LocationGeocodedLocation`](#locationgeocodedlocation).\n"},"parameters":[{"name":"address","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A string representing address, eg. \"Baker Street London\""},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"A `LocationGeocodingOptions` object defining options argument."},"type":{"type":"reference","name":"LocationGeocodingOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"LocationGeocodedLocation"}}],"name":"Promise"}}]},{"name":"getBackgroundPermissionsAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getBackgroundPermissionsAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Checks user's permissions for accessing location while the app is in the background.","returns":"A `Promise` that resolves to an object of type\n[`PermissionResponse`](permissions.md#permissionresponse).\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"getCurrentPositionAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getCurrentPositionAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Requests for one-time delivery of the user's current location.\nDepending on given `accuracy` option it may take some time to resolve,\nespecially when you're inside a building.","text":"> **Note:** Calling it causes the location manager to obtain a location fix\nwhich may take several seconds. Consider using\n[Location.getLastKnownPositionAsync](#locationgetlastknownpositionasyncoptions)\nif you expect to get a quick response and high accuracy is not required.\n","returns":"A `Promise` resolving to an object of type\n[`LocationObject`](#locationobject).\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A `LocationOptions` object defining options argument."},"type":{"type":"reference","name":"LocationOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationObject"}],"name":"Promise"}}]},{"name":"getForegroundPermissionsAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getForegroundPermissionsAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Checks user's permissions for accessing location while the app is in the foreground.","returns":"A `Promise` that resolves to an object of type\n[`PermissionResponse`](permissions.md#permissionresponse).\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"getHeadingAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getHeadingAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the current heading information from the device","returns":"A `Promise` resolving to an object of type\n[LocationHeadingObject](#locationheadingobject).\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationHeadingObject"}],"name":"Promise"}}]},{"name":"getLastKnownPositionAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getLastKnownPositionAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the last known position of the device or `null` if it's not available\nor doesn't match given requirements such as maximum age or required accuracy.\nIt's considered to be faster than `getCurrentPositionAsync` as it doesn't request for the current location,\nbut keep in mind the returned location may not be up-to-date.","returns":"A `Promise` resolving to an object of type\n[LocationObject](#locationobject) or `null` if it's not available or\ndoesn't match given requirements such as maximum age or required accuracy.\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A `LocationLastKnownOptions` object defining options argument."},"type":{"type":"reference","name":"LocationLastKnownOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","name":"LocationObject"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getPermissionsAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Checks user's permissions for accessing location.","returns":"A `Promise` that resolves to an object of type\n[LocationPermissionResponse](#locationpermissionresponse).\n","tags":[{"tag":"deprecated","text":"Use `getForegroundPermissionsAsync()` or `getBackgroundPermissionsAsync()` instead."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationPermissionResponse"}],"name":"Promise"}}]},{"name":"getProviderStatusAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getProviderStatusAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Check status of location providers.","returns":"A `Promise` resolving to an object of type [`LocationProviderStatus`](#locationproviderstatus).\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationProviderStatus"}],"name":"Promise"}}]},{"name":"hasServicesEnabledAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"hasServicesEnabledAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Checks whether location services are enabled by the user.","returns":"A `Promise` resolving to `true` if location services are enabled\non the device, or `false` if not.\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"hasStartedGeofencingAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"hasStartedGeofencingAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"returns":"A `Promise` resolving to boolean value indicating whether the geofencing task is started or not.\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Name of the geofencing task to check."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"hasStartedLocationUpdatesAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"hasStartedLocationUpdatesAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"returns":"A `Promise` resolving to boolean value indicating\nwhether the location task has started or not.\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Name of the location task to check."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"installWebGeolocationPolyfill","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"installWebGeolocationPolyfill","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Polyfills navigator.geolocation for interop with the core\nReact Native and Web API approach to geolocation."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"isBackgroundLocationAvailableAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"isBackgroundLocationAvailableAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Checks whether background location is available.","returns":"A `Promise` resolving to `true` if background location is available\non the device, or `false` if not.\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"requestBackgroundPermissionsAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"requestBackgroundPermissionsAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Asks the user to grant permissions for location while the app is in the background.\nOn **Android 11 or higher**: this method will open the system settings page - before\nthat happens you should explain to the user why your application needs\nbackground location permission. For example,\nyou can use `Modal` component from `react-native` to do that.","text":"> **Note**: Foreground permissions should be granted before asking for the background\npermissions (your app can't obtain background permission without foreground permission).\n","returns":"A `Promise` that resolves to an object of type\n[`PermissionResponse`](permissions.md#permissionresponse).\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"requestForegroundPermissionsAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"requestForegroundPermissionsAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Asks the user to grant permissions for location while the app is in the foreground.","returns":"A `Promise` that resolves to an object of type\n[`PermissionResponse`](permissions.md#permissionresponse).\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Asks the user to grant permissions for location.","returns":"A `Promise` that resolves to an object of type\n[`LocationPermissionResponse`](#locationpermissionresponse).\n","tags":[{"tag":"deprecated","text":"Use `requestForegroundPermissionsAsync()` or `requestBackgroundPermissionsAsync()` instead."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationPermissionResponse"}],"name":"Promise"}}]},{"name":"reverseGeocodeAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"reverseGeocodeAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Reverse geocode a location to postal address.","text":"> **Note**: Geocoding is resource consuming and has to be used reasonably.\nCreating too many requests at a time can result in an error so they have to be managed properly.\nIt's also discouraged to use geocoding while the app is in the background\nand its results won't be shown to the user immediately.\n> On Android, you must request a location permission\n(`Permissions.LOCATION`) from the user before geocoding can be used.\n","returns":"A `Promise` resolving to an array (in most cases its size is 1)\nof address objects of type\n[`LocationGeocodedAddress`](#locationgeocodedaddress)\n"},"parameters":[{"name":"location","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"An object representing a location."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationGeocodedLocation"},{"type":"union","types":[{"type":"literal","value":"latitude"},{"type":"literal","value":"longitude"}]}],"name":"Pick"}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"A `LocationGeocodingOptions` object defining options argument."},"type":{"type":"reference","name":"LocationGeocodingOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"LocationGeocodedAddress"}}],"name":"Promise"}}]},{"name":"setGoogleApiKey","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"setGoogleApiKey","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Sets a Google API Key for using Google Maps Geocoding API which\nis used by default on Web platform and can be enabled through\n`useGoogleMaps` option of `geocodeAsync` and `reverseGeocodeAsync` methods.\nIt might be useful for Android devices that do not have\nGoogle Play Services, hence no Geocoder Service."},"parameters":[{"name":"apiKey","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Google API key obtained from Google API Console.\nThis API key must have `Geocoding API` enabled, otherwise your geocoding\nrequests will be denied.\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"startGeofencingAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"startGeofencingAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Starts geofencing for given regions. When the new event comes, the task with specified name\nwill be called with the region that the device enter to or exit from. If you want to add\nor remove regions from already running geofencing task, you can just call `startGeofencingAsync`\nagain with the new array of regions.","returns":"A `Promise` resolving as soon as the task is registered.\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Name of the task that will be called when the device enters or exits from specified regions."},"type":{"type":"intrinsic","name":"string"}},{"name":"regions","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Array of region objects to be geofenced of type [`LocationRegion`](#locationregion).\n\n# Example\n```ts\nimport { LocationGeofencingEventType } from 'expo-location';\nimport * as TaskManager from 'expo-task-manager';\n\nTaskManager.defineTask(YOUR_TASK_NAME, ({ data: { eventType, region }, error }) => {\n  if (error) {\n  // check `error.message` for more details.\n  return;\n  }\n  if (eventType === LocationGeofencingEventType.Enter) {\n    console.log(\"You've entered region:\", region);\n  }\n  else if (eventType === LocationGeofencingEventType.Exit) {\n    console.log(\"You've left region:\", region);\n  });\n```\n"},"type":{"type":"array","elementType":{"type":"reference","name":"LocationRegion"}},"defaultValue":"[]"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"startLocationUpdatesAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"startLocationUpdatesAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Registers for receiving location updates that can also come when the app is in the background.","returns":"A `Promise` resolving once the task with location updates is registered.\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Name of the task receiving location updates"},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"An object of type [`LocationTaskOptions`](@locationtaskoptions)\npassed to the location manager.\n# Example\n```ts\nimport * as TaskManager from 'expo-task-manager';\n\nTaskManager.defineTask(YOUR_TASK_NAME, ({ data: { locations }, error }) => {\n  if (error) {\n  // check `error.message` for more details.\n  return;\n  }\n  console.log('Received new locations', locations);\n});\n```"},"type":{"type":"reference","name":"LocationTaskOptions"},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"stopGeofencingAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"stopGeofencingAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Stops geofencing for specified task. It unregisters the background task so the app\nwill not be receiving any updates, especially in the background.","returns":"A `Promise` resolving as soon as the task is unregistered.\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Name of the task to unregister."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"stopLocationUpdatesAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"stopLocationUpdatesAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Stops location updates for given task.","returns":"A `Promise` resolving as soon as the task is unregistered.\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Name of the background location task to stop."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"watchHeadingAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"watchHeadingAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Subscribe to compass updates from the device.","returns":"A `Promise` resolving to a subscription object of type\n[`LocationSubscription`](#locationsubscription).\n"},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"This function is called on each compass update.\nIt receives an object of type LocationHeadingObject as the first argument."},"type":{"type":"reference","name":"LocationHeadingCallback"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationSubscription"}],"name":"Promise"}}]},{"name":"watchPositionAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"watchPositionAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Subscribe to location updates from the device.\nPlease note that updates will only occur while the application is in the foreground.\nTo get location updates while in background you'll need to use\n[`Location.startLocationUpdatesAsync`](#locationstartlocationupdatesasynctaskname-options).","returns":"A `Promise` resolving to a subscription object of type\n[`LocationSubscription`](#locationsubscription)\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A `LocationOptions` object defining options argument."},"type":{"type":"reference","name":"LocationOptions"}},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"LocationCallback"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationSubscription"}],"name":"Promise"}}]}]}