{"version":3,"file":"ExpoStoryLoader.js","sourceRoot":"","sources":["../src/ExpoStoryLoader.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,6DAA8D;AAC9D,2CAA+B;AAC/B,6CAAgF;AAEhF,yFAAyF;AACzF,IAAM,OAAO,GAAG,OAAO,CAAC,wBAAwB,CAAC,CAAC;AAElD,SAAS,eAAe,CAAC,EAA8C;QAA5C,eAAe,qBAAA,EAAE,yBAAyB,EAAzB,iBAAiB,mBAAG,KAAK,KAAA;IACnE,IAAM,eAAe,GAAG,EAAE,CAAC;IAE3B,IAAI,eAAe,KAAK,EAAE,EAAE;QAC1B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,UAAA,GAAG;YAC9B,IAAI,GAAG,CAAC,UAAU,CAAC,eAAe,CAAC,EAAE;gBACnC,aAAa;gBACb,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;aACpC;QACH,CAAC,CAAC,CAAC;KACJ;IAED,OAAO,CACL,oBAAC,mBAAI,IAAC,KAAK,EAAE,yBAAU,CAAC,YAAY;QAClC,oBAAC,2BAAY,IAAC,KAAK,EAAE,MAAM,CAAC,aAAa;YACvC,oBAAC,yBAAU,IAAC,KAAK,EAAE,MAAM,CAAC,aAAa,IACpC,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,UAAC,EAA2B;oBAA1B,GAAG,QAAA,EAAE,KAAK,QAAA;gBAC/C,OAAO,CACL,oBAAC,mBAAI,IAAC,GAAG,EAAE,KAAG,GAAK,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ;oBACxC,iBAAiB,IAAI,oBAAC,mBAAI,IAAC,KAAK,EAAE,MAAM,CAAC,UAAU,IAAG,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI,KAAI,EAAE,CAAQ;oBAC/E,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,CACtB,CACR,CAAC;YACJ,CAAC,CAAC,CACS,CACA,CACV,CACR,CAAC;AACJ,CAAC;AAqBQ,0CAAe;AAnBxB,IAAM,MAAM,GAAG,yBAAU,CAAC,MAAM,CAAC;IAC/B,aAAa,EAAE;QACb,IAAI,EAAE,CAAC;QACP,eAAe,EAAE,8BAAU,CAAC,UAAU,CAAC,OAAO;QAC9C,OAAO,EAAE,2BAAO,CAAC,CAAC,CAAC;KACpB;IACD,QAAQ,EAAE;QACR,iBAAiB,EAAE,2BAAO,CAAC,CAAC,CAAC;QAC7B,eAAe,EAAE,2BAAO,CAAC,CAAC,CAAC;QAC3B,iBAAiB,EAAE,CAAC;QACpB,WAAW,EAAE,8BAAU,CAAC,MAAM,CAAC,OAAO;KACvC;IACD,UAAU,EAAE;QACV,YAAY,EAAE,2BAAO,CAAC,CAAC,CAAC;QACxB,QAAQ,EAAE,EAAE;QACZ,UAAU,EAAE,KAAK;KAClB;CACF,CAAC,CAAC","sourcesContent":["import { lightTheme, spacing } from '@expo/styleguide-native';\nimport * as React from 'react';\nimport { View, SafeAreaView, StyleSheet, ScrollView, Text } from 'react-native';\n\n// this is resolved via customization (extraNodeModules) in metro-config / webpack-config\nconst stories = require('generated-expo-stories');\n\nfunction ExpoStoryLoader({ selectedStoryId, displayStoryTitle = false }) {\n  const selectedStories = [];\n\n  if (selectedStoryId !== '') {\n    Object.keys(stories).forEach(key => {\n      if (key.startsWith(selectedStoryId)) {\n        // @ts-ignore\n        selectedStories.push(stories[key]);\n      }\n    });\n  }\n\n  return (\n    <View style={StyleSheet.absoluteFill}>\n      <SafeAreaView style={styles.flexContainer}>\n        <ScrollView style={styles.flexContainer}>\n          {Object.entries(selectedStories).map(([key, story]: [string, any]) => {\n            return (\n              <View key={`${key}`} style={styles.storyRow}>\n                {displayStoryTitle && <Text style={styles.storyTitle}>{story?.name || ''}</Text>}\n                {React.createElement(story)}\n              </View>\n            );\n          })}\n        </ScrollView>\n      </SafeAreaView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  flexContainer: {\n    flex: 1,\n    backgroundColor: lightTheme.background.default,\n    padding: spacing[2],\n  },\n  storyRow: {\n    paddingHorizontal: spacing[2],\n    paddingVertical: spacing[3],\n    borderBottomWidth: 1,\n    borderColor: lightTheme.border.default,\n  },\n  storyTitle: {\n    marginBottom: spacing[2],\n    fontSize: 20,\n    fontWeight: '500',\n  },\n});\n\nexport { ExpoStoryLoader };\n"]}