{"version":3,"file":"ExpoStoryApp.js","sourceRoot":"","sources":["../src/ExpoStoryApp.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6DAAuE;AACvE,2CAA+B;AAC/B,6CAQsB;AAEtB,qDAAoD;AACpD,6CAAsD;AAEtD,SAAwB,GAAG;IACzB,OAAO,CACL,oBAAC,4BAAc;QACb,oBAAC,YAAY,OAAG,CACD,CAClB,CAAC;AACJ,CAAC;AAND,sBAMC;AAED,SAAS,YAAY;IACb,IAAA,KAAwB,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAzC,OAAO,QAAA,EAAE,UAAU,QAAsB,CAAC;IAE3C,IAAA,KAAwB,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,EAA5C,OAAO,QAAA,EAAE,UAAU,QAAyB,CAAC;IAC9C,IAAA,KAAoC,KAAK,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,EAA3E,aAAa,QAAA,EAAE,gBAAgB,QAA4C,CAAC;IAEnF,KAAK,CAAC,SAAS,CAAC;QACd,UAAU,CAAC,IAAI,CAAC,CAAC;QAEjB,KAAK,CAAC,+BAA+B,CAAC;aACnC,IAAI,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aACvB,IAAI,CAAC,UAAA,IAAI;YACR,UAAU,CAAC,KAAK,CAAC,CAAC;YAClB,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxB,CAAC,CAAC;aACD,KAAK,CAAC,UAAA,KAAK;YACV,UAAU,CAAC,KAAK,CAAC,CAAC;YAClB,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;YACnC,OAAO,CAAC,GAAG,CAAC,EAAE,KAAK,OAAA,EAAE,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC;IAEpB,OAAO,CACL,oBAAC,2BAAY,IAAC,KAAK,EAAE,MAAM,CAAC,aAAa;QACvC,oBAAC,mBAAI,IAAC,KAAK,EAAE,MAAM,CAAC,aAAa;YAC/B,oBAAC,mBAAI,IAAC,KAAK,EAAE,MAAM,CAAC,UAAU,wBAA0B;YAExD,oBAAC,yBAAU,IAAC,KAAK,EAAE,MAAM,CAAC,qBAAqB,IAC5C,OAAO,CAAC,GAAG,CAAC,UAAC,KAAU;gBACtB,OAAO,CACL,oBAAC,WAAW,IACV,GAAG,EAAE,KAAK,CAAC,EAAE,EACb,KAAK,EAAE,KAAK,CAAC,KAAK,EAClB,OAAO,EAAE;wBACP,mBAAK,CAAC,IAAI,CAAC;4BACT,OAAO,EAAE,oBAAC,aAAa,IAAC,KAAK,EAAE,KAAK,GAAI;4BACxC,WAAW,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE;yBACpC,CAAC,CAAC;oBACL,CAAC,GACD,CACH,CAAC;YACJ,CAAC,CAAC,CACS;YAgBb,oBAAC,mBAAI,IAAC,KAAK,EAAE,MAAM,CAAC,gBAAgB,EAAE,aAAa,EAAC,MAAM;gBACxD,oBAAC,gCAAiB,IAAC,SAAS,EAAE,OAAO,GAAI,CACpC,CACF,CACM,CAChB,CAAC;AACJ,CAAC;AAED,SAAS,aAAa,CAAC,EAAS;QAAP,KAAK,WAAA;IAC5B,OAAO,CACL,oBAAC,2BAAY,IAAC,KAAK,EAAE,MAAM,CAAC,aAAa;QACvC,oBAAC,yBAAU,IAAC,KAAK,EAAE,MAAM,CAAC,aAAa;YACrC,oBAAC,mBAAI,IAAC,KAAK,EAAE,MAAM,CAAC,qBAAqB;gBACtC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,UAAA,KAAK;oBACtB,OAAO,CACL,oBAAC,WAAW,IACV,GAAG,EAAE,KAAK,CAAC,EAAE,EACb,KAAK,EAAE,KAAK,CAAC,IAAI,EACjB,OAAO,EAAE;4BACP,mBAAK,CAAC,IAAI,CAAC;gCACT,OAAO,EAAE,oBAAC,iCAAe,IAAC,eAAe,EAAE,KAAK,CAAC,EAAE,GAAI;gCACvD,WAAW,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,IAAI,EAAE;6BACnC,CAAC,CAAC;wBACL,CAAC,GACD,CACH,CAAC;gBACJ,CAAC,CAAC;gBAED,KAAK,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,CAC3B,oBAAC,WAAW,IACV,KAAK,EAAC,SAAS,EACf,KAAK,EAAE,8BAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,EAC5C,OAAO,EAAE;wBACP,mBAAK,CAAC,IAAI,CAAC;4BACT,OAAO,EAAE,oBAAC,iCAAe,IAAC,eAAe,EAAE,KAAK,CAAC,EAAE,EAAE,iBAAiB,SAAG;4BACzE,WAAW,EAAE,EAAE,KAAK,EAAK,KAAK,CAAC,KAAK,aAAU,EAAE;yBACjD,CAAC,CAAC;oBACL,CAAC,GACD,CACH,CACI,CACI,CACA,CAChB,CAAC;AACJ,CAAC;AAED,SAAS,WAAW,CAAC,EAAgE;QAA9D,KAAK,WAAA,EAAE,aAA4C,EAA5C,KAAK,mBAAG,8BAAU,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,KAAA,EAAE,OAAO,aAAA;IACjF,OAAO;IACL,aAAa;IACb,oBAAC,wBAAS,IAAC,KAAK,EAAE,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE,eAAe,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO;QAClF,oBAAC,mBAAI,IAAC,KAAK,EAAE,MAAM,CAAC,eAAe,IAAG,KAAK,CAAQ,CACzC,CACb,CAAC;AACJ,CAAC;AAED,IAAM,MAAM,GAAG,yBAAU,CAAC,MAAM,CAAC;IAC/B,aAAa,EAAE;QACb,IAAI,EAAE,CAAC;QACP,eAAe,EAAE,8BAAU,CAAC,UAAU,CAAC,OAAO;QAC9C,OAAO,EAAE,2BAAO,CAAC,CAAC,CAAC;KACpB;IACD,UAAU,EAAE;QACV,QAAQ,EAAE,EAAE;QACZ,UAAU,EAAE,MAAM;KACnB;IACD,qBAAqB,EAAE;QACrB,OAAO,EAAE,2BAAO,CAAC,CAAC,CAAC;QACnB,eAAe,EAAE,8BAAU,CAAC,UAAU,CAAC,OAAO;KAC/C;IACD,WAAW,aACT,YAAY,EAAE,CAAC,EACf,eAAe,EAAE,2BAAO,CAAC,CAAC,CAAC,EAC3B,cAAc,EAAE,2BAAO,CAAC,CAAC,CAAC,EAC1B,eAAe,EAAE,8BAAU,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,IAClD,2BAAO,CAAC,MAAM,CAClB;IACD,eAAe,EAAE;QACf,QAAQ,EAAE,EAAE;QACZ,UAAU,EAAE,KAAK;QACjB,KAAK,EAAE,8BAAU,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU;QAC3C,SAAS,EAAE,QAAQ;KACpB;IACD,aAAa,EAAE;QACb,QAAQ,EAAE,UAAU;QACpB,OAAO,EAAE,2BAAO,CAAC,CAAC,CAAC;QACnB,MAAM,EAAE,2BAAO,CAAC,CAAC,CAAC;QAClB,IAAI,EAAE,CAAC;QACP,KAAK,EAAE,CAAC;KACT;IACD,aAAa,EAAE;QACb,QAAQ,EAAE,UAAU;QACpB,KAAK,EAAE,2BAAO,CAAC,CAAC,CAAC;QACjB,MAAM,EAAE,CAAC;QACT,GAAG,EAAE,CAAC;KACP;IACD,gBAAgB,wBACX,yBAAU,CAAC,kBAAkB,KAChC,cAAc,EAAE,QAAQ,EACxB,UAAU,EAAE,QAAQ,GACrB;CACF,CAAC,CAAC","sourcesContent":["import { lightTheme, shadows, spacing } from '@expo/styleguide-native';\nimport * as React from 'react';\nimport {\n  View,\n  SafeAreaView,\n  Pressable,\n  Text,\n  StyleSheet,\n  ScrollView,\n  ActivityIndicator,\n} from 'react-native';\n\nimport { ExpoStoryLoader } from './ExpoStoryLoader';\nimport { Stack, StackContainer } from './async-stack';\n\nexport default function App() {\n  return (\n    <StackContainer>\n      <ExpoStoryApp />\n    </StackContainer>\n  );\n}\n\nfunction ExpoStoryApp() {\n  const [stories, setStories] = React.useState([]);\n\n  const [loading, setLoading] = React.useState(false);\n  const [lastFetchedAt, setLastFetchedAt] = React.useState(new Date().toISOString());\n\n  React.useEffect(() => {\n    setLoading(true);\n\n    fetch(`http://localhost:7001/stories`)\n      .then(res => res.json())\n      .then(json => {\n        setLoading(false);\n        setStories(json.data);\n      })\n      .catch(error => {\n        setLoading(false);\n        console.log('Server not running?');\n        console.log({ error });\n      });\n  }, [lastFetchedAt]);\n\n  return (\n    <SafeAreaView style={styles.flexContainer}>\n      <View style={styles.flexContainer}>\n        <Text style={styles.storyTitle}>Expo Story Loader</Text>\n\n        <ScrollView style={styles.storyButtonsContainer}>\n          {stories.map((story: any) => {\n            return (\n              <StoryButton\n                key={story.id}\n                title={story.title}\n                onPress={() => {\n                  Stack.push({\n                    element: <StoriesScreen story={story} />,\n                    headerProps: { title: story.title },\n                  });\n                }}\n              />\n            );\n          })}\n        </ScrollView>\n\n        {/* <View style={styles.refreshButton}>\n          <StoryButton\n            title=\"Refresh\"\n            color={lightTheme.button.tertiary.background}\n            onPress={() => setLastFetchedAt(new Date().toISOString())}\n          />\n\n          <ActivityIndicator\n            style={styles.refreshLoader}\n            color={lightTheme.button.tertiary.foreground}\n            animating={loading}\n          />\n        </View> */}\n\n        <View style={styles.loadingContainer} pointerEvents=\"none\">\n          <ActivityIndicator animating={loading} />\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n}\n\nfunction StoriesScreen({ story }) {\n  return (\n    <SafeAreaView style={styles.flexContainer}>\n      <ScrollView style={styles.flexContainer}>\n        <View style={styles.storyButtonsContainer}>\n          {story.stories.map(story => {\n            return (\n              <StoryButton\n                key={story.id}\n                title={story.name}\n                onPress={() => {\n                  Stack.push({\n                    element: <ExpoStoryLoader selectedStoryId={story.id} />,\n                    headerProps: { title: story.name },\n                  });\n                }}\n              />\n            );\n          })}\n\n          {story.stories.length > 1 && (\n            <StoryButton\n              title=\"See All\"\n              color={lightTheme.button.tertiary.background}\n              onPress={() => {\n                Stack.push({\n                  element: <ExpoStoryLoader selectedStoryId={story.id} displayStoryTitle />,\n                  headerProps: { title: `${story.title} Stories` },\n                });\n              }}\n            />\n          )}\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\nfunction StoryButton({ title, color = lightTheme.button.primary.background, onPress }) {\n  return (\n    // @ts-ignore\n    <Pressable style={[styles.storyButton, { backgroundColor: color }]} onPress={onPress}>\n      <Text style={styles.storyButtonText}>{title}</Text>\n    </Pressable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  flexContainer: {\n    flex: 1,\n    backgroundColor: lightTheme.background.default,\n    padding: spacing[3],\n  },\n  storyTitle: {\n    fontSize: 32,\n    fontWeight: 'bold',\n  },\n  storyButtonsContainer: {\n    padding: spacing[4],\n    backgroundColor: lightTheme.background.default,\n  },\n  storyButton: {\n    borderRadius: 4,\n    paddingVertical: spacing[4],\n    marginVertical: spacing[2],\n    backgroundColor: lightTheme.button.primary.background,\n    ...shadows.button,\n  },\n  storyButtonText: {\n    fontSize: 18,\n    fontWeight: '700',\n    color: lightTheme.button.primary.foreground,\n    textAlign: 'center',\n  },\n  refreshButton: {\n    position: 'absolute',\n    padding: spacing[3],\n    bottom: spacing[6],\n    left: 0,\n    right: 0,\n  },\n  refreshLoader: {\n    position: 'absolute',\n    right: spacing[4],\n    bottom: 0,\n    top: 0,\n  },\n  loadingContainer: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n"]}