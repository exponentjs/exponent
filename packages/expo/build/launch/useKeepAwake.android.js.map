{"version":3,"file":"useKeepAwake.android.js","sourceRoot":"","sources":["../../src/launch/useKeepAwake.android.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAElC,qFAAqF;AACrF,iFAAiF;AACjF,MAAM,CAAC,IAAI,eAAuC,CAAC;AAEnD,IAAI,OAAO,EAAE;IACX,IAAI;QACF,oCAAoC;QACpC,MAAM,EAAE,iBAAiB,EAAE,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;QACzD,8EAA8E;QAC9E,kFAAkF;QAClF,yEAAyE;QACzE,eAAe,GAAG,CAAC,GAAY,EAAE,EAAE;YACjC,SAAS,CAAC,GAAG,EAAE,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QACjD,CAAC,CAAC;KACH;IAAC,MAAM,GAAE;CACX","sourcesContent":["import { useEffect } from 'react';\n\n// This hook can be optionally imported because __DEV__ never changes during runtime.\n// Using __DEV__ like this enables tree shaking to remove the hook in production.\nexport let useDevKeepAwake: (tag?: string) => void;\n\nif (__DEV__) {\n  try {\n    // Optionally import expo-keep-awake\n    const { activateKeepAwake } = require('expo-keep-awake');\n    // Using `useKeepAwake` throws an exception when the app is closed on Android.\n    // On app close, the `currentActivity` is null and deactivating will always throw.\n    // With the `FLAG_KEEP_SCREEN_ON` we also don't need to release the lock.\n    useDevKeepAwake = (tag?: string) => {\n      useEffect(() => activateKeepAwake(tag), [tag]);\n    };\n  } catch {}\n}\n"]}